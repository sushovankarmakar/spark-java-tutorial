package udemy.virtualPairProgrammers;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Stream;

/**
 * A wrapper for an input file containing a list of what we think are "boring" words.
 * <p>
 * The list was generated by running a word count across all of VirtualPairProgrammer's subtitle files.
 * <p>
 * Words that appear in every single course must (we think) be "boring" - ie they don't have a relevance
 * to just one specific course.
 * <p>
 * This list of words is "small data" - ie it can be safely loaded into the driver's JVM - no need to
 * distribute this data.
 */
public class Util {

    public static Set<String> boringWords = new HashSet<>();

    static {
        // On the video, I say "change this class name" - ignore that.
        // The class name should have been Util, as it is here!

        String inputFile = "src/main/resources/udemy/virtualPairProgrammers/subtitles/boring-words.txt";

        /*try (BufferedReader br = new BufferedReader(new FileReader(inputFile))) {
            br.lines().forEach(boringWords::add);
        } catch (IOException e) {
            throw new UncheckedIOException("Error reading boring-words.txt", e);
        }*/

        try (Stream<String> lines = Files.lines(Paths.get(inputFile))) {
            lines.forEach(boringWords::add);
        } catch (IOException e) {
            throw new UncheckedIOException("Error reading boring-words.txt", e);
        }
    }

    /**
     * Returns true if we think the word is "boring" - ie it doesn't seem to be a keyword
     * for a training course.
     */
    public static boolean isBoring(String word) {
        return boringWords.contains(word);
    }

    /**
     * Convenience method for more readable client code
     */
    public static boolean isNotBoring(String word) {
        return !isBoring(word);
    }

}
